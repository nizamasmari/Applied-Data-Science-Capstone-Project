{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Creating Dataframe of Canada Postal Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: beautifulsoup4 in /opt/conda/envs/Python36/lib/python3.6/site-packages (4.7.1)\n",
      "Requirement already satisfied: soupsieve>=1.2 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from beautifulsoup4) (1.7.1)\n",
      "Requirement already satisfied: lxml in /opt/conda/envs/Python36/lib/python3.6/site-packages (4.3.1)\n",
      "Requirement already satisfied: request in /opt/conda/envs/Python36/lib/python3.6/site-packages (2019.4.13)\n",
      "Requirement already satisfied: post in /opt/conda/envs/Python36/lib/python3.6/site-packages (from request) (2019.4.13)\n",
      "Requirement already satisfied: setuptools in /opt/conda/envs/Python36/lib/python3.6/site-packages (from request) (40.8.0)\n",
      "Requirement already satisfied: get in /opt/conda/envs/Python36/lib/python3.6/site-packages (from request) (2019.4.13)\n",
      "Requirement already satisfied: query-string in /opt/conda/envs/Python36/lib/python3.6/site-packages (from get->request) (2019.4.13)\n",
      "Requirement already satisfied: public in /opt/conda/envs/Python36/lib/python3.6/site-packages (from query-string->get->request) (2019.4.13)\n"
     ]
    }
   ],
   "source": [
    "! pip install beautifulsoup4 \n",
    "! pip install lxml\n",
    "! pip install request"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup #library to scrap info from html\n",
    "import requests #library to handle requests\n",
    "import csv #library to read/save csv\n",
    "import pandas as pd # library for data analsysis \n",
    "import numpy as np #numpy library"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " rows =  288  columns =  3\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postcode           Borough     Neighbourhood\n",
       "0      M1A      Not assigned      Not assigned\n",
       "1      M2A      Not assigned      Not assigned\n",
       "2      M3A        North York         Parkwoods\n",
       "3      M4A        North York  Victoria Village\n",
       "4      M5A  Downtown Toronto      Harbourfront"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# make the GET request \n",
    "url = requests.get(\"https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M\").text\n",
    "soup = BeautifulSoup(url,'lxml')\n",
    "\n",
    "\n",
    "#scrapping list of canada postal code\n",
    "table = soup.find_all('table')\n",
    "df = pd.read_html(str(table))[0]\n",
    "print(' rows = ', df.shape[0], ' columns = ', df.shape[1])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough     Neighbourhood\n",
       "0        M1A      Not assigned      Not assigned\n",
       "1        M2A      Not assigned      Not assigned\n",
       "2        M3A        North York         Parkwoods\n",
       "3        M4A        North York  Victoria Village\n",
       "4        M5A  Downtown Toronto      Harbourfront"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#rename the column\n",
    "df.rename(columns={'Postcode':'PostalCode'}, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Heights</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough     Neighbourhood\n",
       "0        M3A        North York         Parkwoods\n",
       "1        M4A        North York  Victoria Village\n",
       "2        M5A  Downtown Toronto      Harbourfront\n",
       "3        M5A  Downtown Toronto       Regent Park\n",
       "4        M6A        North York  Lawrence Heights"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#slice the unwanted data and create newDataframe\n",
    "dfnew = df[df['Borough'] != 'Not assigned'].reset_index(drop=True)\n",
    "dfnew.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3N</td>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview Northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M6M</td>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M9L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M5G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Central Bay Street</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5J</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront East, Toronto Islands, Union Station</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough  \\\n",
       "0        M3N        North York   \n",
       "1        M6M              York   \n",
       "2        M9L        North York   \n",
       "3        M5G  Downtown Toronto   \n",
       "4        M5J  Downtown Toronto   \n",
       "\n",
       "                                       Neighbourhood  \n",
       "0                                Downsview Northwest  \n",
       "1     Del Ray, Keelesdale, Mount Dennis, Silverthorn  \n",
       "2                                      Humber Summit  \n",
       "3                                 Central Bay Street  \n",
       "4  Harbourfront East, Toronto Islands, Union Station  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew = dfnew.groupby(['PostalCode','Borough'])['Neighbourhood'].apply(list)\n",
    "dfnew = dfnew.sample(frac=1).reset_index()\n",
    "dfnew['Neighbourhood']= dfnew['Neighbourhood'].str.join(', ')\n",
    "dfnew.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3N</td>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview Northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M6M</td>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M9L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M5G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Central Bay Street</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5J</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront East, Toronto Islands, Union Station</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough  \\\n",
       "0        M3N        North York   \n",
       "1        M6M              York   \n",
       "2        M9L        North York   \n",
       "3        M5G  Downtown Toronto   \n",
       "4        M5J  Downtown Toronto   \n",
       "\n",
       "                                       Neighbourhood  \n",
       "0                                Downsview Northwest  \n",
       "1     Del Ray, Keelesdale, Mount Dennis, Silverthorn  \n",
       "2                                      Humber Summit  \n",
       "3                                 Central Bay Street  \n",
       "4  Harbourfront East, Toronto Islands, Union Station  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew.loc[dfnew.Neighbourhood == 'Not assigned', 'Neighbourhood'] = dfnew['Borough'].reset_index(drop=True)\n",
    "dfnew.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " rows =  103  columns =  3\n"
     ]
    }
   ],
   "source": [
    "#number of rows and columns\n",
    "print(' rows = ', dfnew.shape[0], ' columns = ', dfnew.shape[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Creating a New Dataframe of Canada Postal Code with Geographical Longitude and Latitude Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M1B</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M1C</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M1E</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M1G</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M1H</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code   Latitude  Longitude\n",
       "0         M1B  43.806686 -79.194353\n",
       "1         M1C  43.784535 -79.160497\n",
       "2         M1E  43.763573 -79.188711\n",
       "3         M1G  43.770992 -79.216917\n",
       "4         M1H  43.773136 -79.239476"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = pd.read_csv('http://cocl.us/Geospatial_data')\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M3N</td>\n",
       "      <td>North York</td>\n",
       "      <td>Downsview Northwest</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M6M</td>\n",
       "      <td>York</td>\n",
       "      <td>Del Ray, Keelesdale, Mount Dennis, Silverthorn</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M9L</td>\n",
       "      <td>North York</td>\n",
       "      <td>Humber Summit</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M5G</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M5J</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront East, Toronto Islands, Union Station</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode           Borough  \\\n",
       "0        M3N        North York   \n",
       "1        M6M              York   \n",
       "2        M9L        North York   \n",
       "3        M5G  Downtown Toronto   \n",
       "4        M5J  Downtown Toronto   \n",
       "\n",
       "                                       Neighbourhood   Latitude  Longitude  \n",
       "0                                Downsview Northwest  43.806686 -79.194353  \n",
       "1     Del Ray, Keelesdale, Mount Dennis, Silverthorn  43.784535 -79.160497  \n",
       "2                                      Humber Summit  43.763573 -79.188711  \n",
       "3                                 Central Bay Street  43.770992 -79.216917  \n",
       "4  Harbourfront East, Toronto Islands, Union Station  43.773136 -79.239476  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#combining the two table\n",
    "dfnew[['Latitude', 'Longitude']] = df1[['Latitude', 'Longitude']]\n",
    "dfnew.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Explore the neighborhoods in Toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solving environment: done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "Solving environment: done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "Libraries imported.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np # library to handle data in a vectorized manner\n",
    "\n",
    "import pandas as pd # library for data analsysis\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_rows', None)\n",
    "\n",
    "import json # library to handle JSON files\n",
    "\n",
    "!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "from geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n",
    "\n",
    "import requests # library to handle requests\n",
    "from pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n",
    "\n",
    "# Matplotlib and associated plotting modules\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "# import k-means from clustering stage\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\n",
    "import folium # map rendering library\n",
    "\n",
    "print('Libraries imported.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geograpical coordinate of Toronto are 43.653963, -79.387207.\n"
     ]
    }
   ],
   "source": [
    "#Use geopy library to get the latitude and longitude values of New York City.\n",
    "address = 'Toronto, ON'\n",
    "\n",
    "geolocator = Nominatim(user_agent=\"toronto_explorer\")\n",
    "location = geolocator.geocode(address)\n",
    "latitude = location.latitude\n",
    "longitude = location.longitude\n",
    "print('The geograpical coordinate of Toronto are {}, {}.'.format(latitude, longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f74707832e8>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create map of toronto using latitude and longitude values\n",
    "map_toronto = folium.Map(location=[latitude, longitude], zoom_start=10)\n",
    "\n",
    "# add markers to map\n",
    "for lat, lng, borough, neighbourhood in zip(dfnew['Latitude'], dfnew['Longitude'], dfnew['Borough'], dfnew['Neighbourhood']):\n",
    "    label = '{}, {}'.format(neighbourhood, borough)\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_toronto)  \n",
    "    \n",
    "map_toronto"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simplify the data and segmented only West Toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M6J</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M6S</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>43.667967</td>\n",
       "      <td>-79.367675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M6K</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>43.657162</td>\n",
       "      <td>-79.378937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M6R</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>43.662696</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M6P</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>43.636847</td>\n",
       "      <td>-79.428191</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode       Borough                                 Neighbourhood  \\\n",
       "0        M6J  West Toronto                      Little Portugal, Trinity   \n",
       "1        M6S  West Toronto                            Runnymede, Swansea   \n",
       "2        M6K  West Toronto  Brockton, Exhibition Place, Parkdale Village   \n",
       "3        M6R  West Toronto                        Parkdale, Roncesvalles   \n",
       "4        M6P  West Toronto                 High Park, The Junction South   \n",
       "\n",
       "    Latitude  Longitude  \n",
       "0  43.754328 -79.442259  \n",
       "1  43.667967 -79.367675  \n",
       "2  43.657162 -79.378937  \n",
       "3  43.662696 -79.400049  \n",
       "4  43.636847 -79.428191  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_data = dfnew[dfnew['Borough'] == 'West Toronto'].reset_index(drop=True)\n",
    "westtoronto_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geograpical coordinate of Manhattan are 43.7697394, -79.3635619.\n"
     ]
    }
   ],
   "source": [
    "address = 'West Toronto, NY'\n",
    "\n",
    "geolocator = Nominatim(user_agent=\"toronto_explorer\")\n",
    "location = geolocator.geocode(address)\n",
    "latitude = location.latitude\n",
    "longitude = location.longitude\n",
    "print('The geograpical coordinate of Manhattan are {}, {}.'.format(latitude, longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f747051d978>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map of Manhattan using latitude and longitude values\n",
    "map_westtoronto = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# add markers to map\n",
    "for lat, lng, label in zip(westtoronto_data['Latitude'], westtoronto_data['Longitude'], westtoronto_data['Neighbourhood']):\n",
    "    label = folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='#3186cc',\n",
    "        fill_opacity=0.7,\n",
    "        parse_html=False).add_to(map_westtoronto)  \n",
    "    \n",
    "map_westtoronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentails:\n",
      "CLIENT_ID: OOXX3LJZCAIVI1UTJEXF2LV4URNIB2CHF2IVTTTWUSTNRUT0\n",
      "CLIENT_SECRET:MYER34C4WNTROKJISKCZFVDVNIGWOIGUS1NC5L4C23Z1WPKR\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID = 'OOXX3LJZCAIVI1UTJEXF2LV4URNIB2CHF2IVTTTWUSTNRUT0' # your Foursquare ID\n",
    "CLIENT_SECRET = 'MYER34C4WNTROKJISKCZFVDVNIGWOIGUS1NC5L4C23Z1WPKR' # your Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "\n",
    "print('Your credentails:')\n",
    "print('CLIENT_ID: ' + CLIENT_ID)\n",
    "print('CLIENT_SECRET:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Little Portugal, Trinity'"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#explore first neighbourhood\n",
    "westtoronto_data.loc[0,'Neighbourhood']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Explore first neighbourhood latitude and longitude value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Latitude and longitude values of Little Portugal, Trinity are 43.7543283, -79.4422593.\n"
     ]
    }
   ],
   "source": [
    "neighbourhood_latitude = westtoronto_data.loc[0, 'Latitude'] # neighborhood latitude value\n",
    "neighbourhood_longitude = westtoronto_data.loc[0, 'Longitude'] # neighborhood longitude value\n",
    "\n",
    "neighbourhood_name = westtoronto_data.loc[0, 'Neighbourhood'] # neighborhood name\n",
    "\n",
    "print('Latitude and longitude values of {} are {}, {}.'.format(neighbourhood_name, \n",
    "                                                               neighbourhood_latitude, \n",
    "                                                               neighbourhood_longitude))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://api.foursquare.com/v2/venues/explore?client_id=OOXX3LJZCAIVI1UTJEXF2LV4URNIB2CHF2IVTTTWUSTNRUT0&client_secret=MYER34C4WNTROKJISKCZFVDVNIGWOIGUS1NC5L4C23Z1WPKR&ll=43.7697394,-79.3635619&v=20180605&radius=500&limit=100'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# type your answer here\n",
    "\n",
    "LIMIT = 100 # limit of number of venues returned by Foursquare API\n",
    "radius = 500 # define radius\n",
    "\n",
    "url = 'https://api.foursquare.com/v2/venues/explore?client_id={}&client_secret={}&ll={},{}&v={}&radius={}&limit={}'.format(CLIENT_ID, CLIENT_SECRET, latitude, longitude, VERSION, radius, LIMIT)\n",
    "url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'meta': {'code': 200, 'requestId': '5da24c77f9dbde0035c9b762'},\n",
       " 'response': {'suggestedFilters': {'header': 'Tap to show:',\n",
       "   'filters': [{'name': 'Open now', 'key': 'openNow'}]},\n",
       "  'headerLocation': 'Bayview Village',\n",
       "  'headerFullLocation': 'Bayview Village, Toronto',\n",
       "  'headerLocationGranularity': 'neighborhood',\n",
       "  'totalResults': 15,\n",
       "  'suggestedBounds': {'ne': {'lat': 43.7742394045, 'lng': -79.3573419266686},\n",
       "   'sw': {'lat': 43.7652393955, 'lng': -79.36978187333139}},\n",
       "  'groups': [{'type': 'Recommended Places',\n",
       "    'name': 'recommended',\n",
       "    'items': [{'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '597684ae4420d807a0903318',\n",
       "       'name': 'Ikea North York L3 EV Charging Station 1',\n",
       "       'location': {'lat': 43.767396,\n",
       "        'lng': -79.367758,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.767396,\n",
       "          'lng': -79.367758}],\n",
       "        'distance': 426,\n",
       "        'cc': 'CA',\n",
       "        'neighborhood': 'Bayview Village',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['Toronto ON', 'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1f8941735',\n",
       "         'name': 'Furniture / Home Store',\n",
       "         'pluralName': 'Furniture / Home Stores',\n",
       "         'shortName': 'Furniture / Home',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/furniture_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-597684ae4420d807a0903318-0'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4ad889bdf964a5201c1221e3',\n",
       "       'name': 'IKEA',\n",
       "       'location': {'address': '15 Provost Dr.',\n",
       "        'crossStreet': 'Esther Shiner Blvd',\n",
       "        'lat': 43.76834838240512,\n",
       "        'lng': -79.36857588777414,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.76834838240512,\n",
       "          'lng': -79.36857588777414}],\n",
       "        'distance': 431,\n",
       "        'postalCode': 'M2K 2X9',\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['15 Provost Dr. (Esther Shiner Blvd)',\n",
       "         'Toronto ON M2K 2X9',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1f8941735',\n",
       "         'name': 'Furniture / Home Store',\n",
       "         'pluralName': 'Furniture / Home Stores',\n",
       "         'shortName': 'Furniture / Home',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/furniture_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4ad889bdf964a5201c1221e3-1'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4d2a05e055a8b60c16d7dbc0',\n",
       "       'name': 'IKEA Restaurant',\n",
       "       'location': {'address': '15 Provost Dr',\n",
       "        'crossStreet': 'Esther Shiner Blvd',\n",
       "        'lat': 43.76835882684743,\n",
       "        'lng': -79.36851709651603,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.76835882684743,\n",
       "          'lng': -79.36851709651603}],\n",
       "        'distance': 426,\n",
       "        'postalCode': 'M2K 2X9',\n",
       "        'cc': 'CA',\n",
       "        'neighborhood': 'Bayview Village',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['15 Provost Dr (Esther Shiner Blvd)',\n",
       "         'Toronto ON M2K 2X9',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1c6941735',\n",
       "         'name': 'Scandinavian Restaurant',\n",
       "         'pluralName': 'Scandinavian Restaurants',\n",
       "         'shortName': 'Scandinavian',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/scandinavian_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4d2a05e055a8b60c16d7dbc0-2'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '5b5a3bae46e1b6002c512d12',\n",
       "       'name': 'IKEA Bistro & Swedish Food Market',\n",
       "       'location': {'address': '15 Provost Dr',\n",
       "        'crossStreet': 'at Old Leslie St',\n",
       "        'lat': 43.767763,\n",
       "        'lng': -79.367451,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.767763,\n",
       "          'lng': -79.367451}],\n",
       "        'distance': 382,\n",
       "        'postalCode': 'M2K 2X9',\n",
       "        'cc': 'CA',\n",
       "        'neighborhood': 'Bayview Village',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['15 Provost Dr (at Old Leslie St)',\n",
       "         'Toronto ON M2K 2X9',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1f9941735',\n",
       "         'name': 'Food & Drink Shop',\n",
       "         'pluralName': 'Food & Drink Shops',\n",
       "         'shortName': 'Food & Drink',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/foodanddrink_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-5b5a3bae46e1b6002c512d12-3'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4b3e8e54f964a520e19e25e3',\n",
       "       'name': 'Peking Man 牛家莊',\n",
       "       'location': {'address': '1100 Sheppard Ave E',\n",
       "        'crossStreet': 'Leslie',\n",
       "        'lat': 43.770886228080634,\n",
       "        'lng': -79.36945927876354,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.770886228080634,\n",
       "          'lng': -79.36945927876354}],\n",
       "        'distance': 490,\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['1100 Sheppard Ave E (Leslie)',\n",
       "         'Toronto ON',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d145941735',\n",
       "         'name': 'Chinese Restaurant',\n",
       "         'pluralName': 'Chinese Restaurants',\n",
       "         'shortName': 'Chinese',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/asian_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4b3e8e54f964a520e19e25e3-4'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4bfbd0ccd0382d7f361bca0a',\n",
       "       'name': 'Starbucks',\n",
       "       'location': {'address': '4001 Leslie St',\n",
       "        'crossStreet': 'at Sheppard Ave E',\n",
       "        'lat': 43.769468,\n",
       "        'lng': -79.362582,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.769468,\n",
       "          'lng': -79.362582}],\n",
       "        'distance': 84,\n",
       "        'postalCode': 'M2K 1E1',\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['4001 Leslie St (at Sheppard Ave E)',\n",
       "         'Toronto ON M2K 1E1',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1e0931735',\n",
       "         'name': 'Coffee Shop',\n",
       "         'pluralName': 'Coffee Shops',\n",
       "         'shortName': 'Coffee Shop',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4bfbd0ccd0382d7f361bca0a-5'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4f76401be4b0421081ad497b',\n",
       "       'name': 'Tim Hortons',\n",
       "       'location': {'lat': 43.769059972908614,\n",
       "        'lng': -79.3630860207423,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.769059972908614,\n",
       "          'lng': -79.3630860207423}],\n",
       "        'distance': 84,\n",
       "        'cc': 'CA',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1e0931735',\n",
       "         'name': 'Coffee Shop',\n",
       "         'pluralName': 'Coffee Shops',\n",
       "         'shortName': 'Coffee Shop',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/coffeeshop_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4f76401be4b0421081ad497b-6'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4e934cbc93adf0b000acb514',\n",
       "       'name': 'East Don Parklands Trail',\n",
       "       'location': {'lat': 43.7715113782369,\n",
       "        'lng': -79.36420792033495,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.7715113782369,\n",
       "          'lng': -79.36420792033495}],\n",
       "        'distance': 203,\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['Toronto ON', 'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d159941735',\n",
       "         'name': 'Trail',\n",
       "         'pluralName': 'Trails',\n",
       "         'shortName': 'Trail',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/parks_outdoors/hikingtrail_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4e934cbc93adf0b000acb514-7'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4c6c1a0446353704d07105bc',\n",
       "       'name': 'Canadian Tire Street Meat',\n",
       "       'location': {'address': '1019 Sheppard Avenue East',\n",
       "        'crossStreet': 'Leslie',\n",
       "        'lat': 43.7717584029455,\n",
       "        'lng': -79.36409243129752,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.7717584029455,\n",
       "          'lng': -79.36409243129752}],\n",
       "        'distance': 228,\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['1019 Sheppard Avenue East (Leslie)',\n",
       "         'Toronto ON',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1cb941735',\n",
       "         'name': 'Food Truck',\n",
       "         'pluralName': 'Food Trucks',\n",
       "         'shortName': 'Food Truck',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/streetfood_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4c6c1a0446353704d07105bc-8'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4b338f8cf964a520c31a25e3',\n",
       "       'name': 'TTC Bus 51 Leslie',\n",
       "       'location': {'address': 'Leslie St.',\n",
       "        'lat': 43.77199250854572,\n",
       "        'lng': -79.36424732208252,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.77199250854572,\n",
       "          'lng': -79.36424732208252}],\n",
       "        'distance': 256,\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['Leslie St.', 'Toronto ON', 'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d12b951735',\n",
       "         'name': 'Bus Line',\n",
       "         'pluralName': 'Bus Lines',\n",
       "         'shortName': 'Bus',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/travel/busstation_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4b338f8cf964a520c31a25e3-9'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4ae47a19f964a520d09a21e3',\n",
       "       'name': 'Leslie Subway Station',\n",
       "       'location': {'address': '1209 Sheppard Ave.',\n",
       "        'crossStreet': 'at Old Leslie St.',\n",
       "        'lat': 43.77062347898726,\n",
       "        'lng': -79.36671014750037,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.77062347898726,\n",
       "          'lng': -79.36671014750037}],\n",
       "        'distance': 271,\n",
       "        'postalCode': 'M2K 3A6',\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['1209 Sheppard Ave. (at Old Leslie St.)',\n",
       "         'Toronto ON M2K 3A6',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1fd931735',\n",
       "         'name': 'Metro Station',\n",
       "         'pluralName': 'Metro Stations',\n",
       "         'shortName': 'Metro',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/travel/subway_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4ae47a19f964a520d09a21e3-10'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '5ab3d54fa4b51b6a052a606e',\n",
       "       'name': 'Beauty Boutique by Shoppers Drug Mart',\n",
       "       'location': {'address': '1800 Sheppard Ave E',\n",
       "        'lat': 43.7720135,\n",
       "        'lng': -79.3615713,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.7720135,\n",
       "          'lng': -79.3615713}],\n",
       "        'distance': 299,\n",
       "        'postalCode': 'M2J 5A7',\n",
       "        'cc': 'CA',\n",
       "        'city': 'Willowdale',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['1800 Sheppard Ave E',\n",
       "         'Willowdale ON M2J 5A7',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d10c951735',\n",
       "         'name': 'Cosmetics Shop',\n",
       "         'pluralName': 'Cosmetics Shops',\n",
       "         'shortName': 'Cosmetics',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/beauty_cosmetic_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-5ab3d54fa4b51b6a052a606e-11'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4c0039cc37850f4718f5973f',\n",
       "       'name': 'Oriole GO Station',\n",
       "       'location': {'address': '3300 Leslie St',\n",
       "        'crossStreet': 'at Sheppard Ave E',\n",
       "        'lat': 43.765601333242174,\n",
       "        'lng': -79.36452324581155,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.765601333242174,\n",
       "          'lng': -79.36452324581155}],\n",
       "        'distance': 467,\n",
       "        'cc': 'CA',\n",
       "        'neighborhood': 'Silver Hills',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['3300 Leslie St (at Sheppard Ave E)',\n",
       "         'Toronto ON',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d129951735',\n",
       "         'name': 'Train Station',\n",
       "         'pluralName': 'Train Stations',\n",
       "         'shortName': 'Train Station',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/travel/trainstation_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4c0039cc37850f4718f5973f-12'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '56ad278d498e9e5b3c76a297',\n",
       "       'name': 'Ikea Ice Cream Stand',\n",
       "       'location': {'address': '15 Provost',\n",
       "        'lat': 43.76761942778346,\n",
       "        'lng': -79.36816745748429,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.76761942778346,\n",
       "          'lng': -79.36816745748429}],\n",
       "        'distance': 439,\n",
       "        'cc': 'CA',\n",
       "        'neighborhood': 'Bayview Village',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['15 Provost', 'Toronto ON', 'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d1c9941735',\n",
       "         'name': 'Ice Cream Shop',\n",
       "         'pluralName': 'Ice Cream Shops',\n",
       "         'shortName': 'Ice Cream',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/food/icecream_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-56ad278d498e9e5b3c76a297-13'},\n",
       "     {'reasons': {'count': 0,\n",
       "       'items': [{'summary': 'This spot is popular',\n",
       "         'type': 'general',\n",
       "         'reasonName': 'globalInteractionReason'}]},\n",
       "      'venue': {'id': '4ed91ca802d5244e2ee57ef1',\n",
       "       'name': 'Main Drug Mart',\n",
       "       'location': {'address': '1100 Sheppard Avenue East',\n",
       "        'lat': 43.771151816664684,\n",
       "        'lng': -79.36942677483242,\n",
       "        'labeledLatLngs': [{'label': 'display',\n",
       "          'lat': 43.771151816664684,\n",
       "          'lng': -79.36942677483242}],\n",
       "        'distance': 496,\n",
       "        'cc': 'CA',\n",
       "        'city': 'Toronto',\n",
       "        'state': 'ON',\n",
       "        'country': 'Canada',\n",
       "        'formattedAddress': ['1100 Sheppard Avenue East',\n",
       "         'Toronto ON',\n",
       "         'Canada']},\n",
       "       'categories': [{'id': '4bf58dd8d48988d10f951735',\n",
       "         'name': 'Pharmacy',\n",
       "         'pluralName': 'Pharmacies',\n",
       "         'shortName': 'Pharmacy',\n",
       "         'icon': {'prefix': 'https://ss3.4sqi.net/img/categories_v2/shops/pharmacy_',\n",
       "          'suffix': '.png'},\n",
       "         'primary': True}],\n",
       "       'photos': {'count': 0, 'groups': []}},\n",
       "      'referralId': 'e-0-4ed91ca802d5244e2ee57ef1-14'}]}]}}"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = requests.get(url).json()\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function that extracts the category of the venue\n",
    "def get_category_type(row):\n",
    "    try:\n",
    "        categories_list = row['categories']\n",
    "    except:\n",
    "        categories_list = row['venue.categories']\n",
    "        \n",
    "    if len(categories_list) == 0:\n",
    "        return None\n",
    "    else:\n",
    "        return categories_list[0]['name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>categories</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ikea North York L3 EV Charging Station 1</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>43.767396</td>\n",
       "      <td>-79.367758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>IKEA</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>43.768348</td>\n",
       "      <td>-79.368576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>IKEA Restaurant</td>\n",
       "      <td>Scandinavian Restaurant</td>\n",
       "      <td>43.768359</td>\n",
       "      <td>-79.368517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>IKEA Bistro &amp; Swedish Food Market</td>\n",
       "      <td>Food &amp; Drink Shop</td>\n",
       "      <td>43.767763</td>\n",
       "      <td>-79.367451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Peking Man 牛家莊</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>43.770886</td>\n",
       "      <td>-79.369459</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                       name               categories  \\\n",
       "0  Ikea North York L3 EV Charging Station 1   Furniture / Home Store   \n",
       "1                                      IKEA   Furniture / Home Store   \n",
       "2                           IKEA Restaurant  Scandinavian Restaurant   \n",
       "3         IKEA Bistro & Swedish Food Market        Food & Drink Shop   \n",
       "4                            Peking Man 牛家莊       Chinese Restaurant   \n",
       "\n",
       "         lat        lng  \n",
       "0  43.767396 -79.367758  \n",
       "1  43.768348 -79.368576  \n",
       "2  43.768359 -79.368517  \n",
       "3  43.767763 -79.367451  \n",
       "4  43.770886 -79.369459  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "venues = results['response']['groups'][0]['items']\n",
    "    \n",
    "nearby_venues = json_normalize(venues) # flatten JSON\n",
    "\n",
    "# filter columns\n",
    "filtered_columns = ['venue.name', 'venue.categories', 'venue.location.lat', 'venue.location.lng']\n",
    "nearby_venues =nearby_venues.loc[:, filtered_columns]\n",
    "\n",
    "# filter the category for each row\n",
    "nearby_venues['venue.categories'] = nearby_venues.apply(get_category_type, axis=1)\n",
    "\n",
    "# clean columns\n",
    "nearby_venues.columns = [col.split(\".\")[-1] for col in nearby_venues.columns]\n",
    "\n",
    "nearby_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 venues were returned by Foursquare.\n"
     ]
    }
   ],
   "source": [
    "print('{} venues were returned by Foursquare.'.format(nearby_venues.shape[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Explore neighbourhood in West Toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    \n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        print(name)\n",
    "            \n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "            \n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        \n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighbourhood', \n",
    "                  'Neighbourhood Latitude', \n",
    "                  'Neighbourhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    \n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Little Portugal, Trinity\n",
      "Runnymede, Swansea\n",
      "Brockton, Exhibition Place, Parkdale Village\n",
      "Parkdale, Roncesvalles\n",
      "High Park, The Junction South\n",
      "Dovercourt Village, Dufferin\n"
     ]
    }
   ],
   "source": [
    "westtoronto_venues = getNearbyVenues(names= westtoronto_data['Neighbourhood'],\n",
    "                                   latitudes= westtoronto_data['Latitude'],\n",
    "                                   longitudes= westtoronto_data['Longitude']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(241, 7)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Neighbourhood Latitude</th>\n",
       "      <th>Neighbourhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>Wolfie's Deli</td>\n",
       "      <td>43.754875</td>\n",
       "      <td>-79.442438</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>Bagel Plus</td>\n",
       "      <td>43.755395</td>\n",
       "      <td>-79.440686</td>\n",
       "      <td>Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>Starbucks</td>\n",
       "      <td>43.755703</td>\n",
       "      <td>-79.440483</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>Best for Bride in Toronto</td>\n",
       "      <td>43.755720</td>\n",
       "      <td>-79.437883</td>\n",
       "      <td>Bridal Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>Tim Hortons</td>\n",
       "      <td>43.754767</td>\n",
       "      <td>-79.443250</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Neighbourhood  Neighbourhood Latitude  Neighbourhood Longitude  \\\n",
       "0  Little Portugal, Trinity               43.754328               -79.442259   \n",
       "1  Little Portugal, Trinity               43.754328               -79.442259   \n",
       "2  Little Portugal, Trinity               43.754328               -79.442259   \n",
       "3  Little Portugal, Trinity               43.754328               -79.442259   \n",
       "4  Little Portugal, Trinity               43.754328               -79.442259   \n",
       "\n",
       "                       Venue  Venue Latitude  Venue Longitude Venue Category  \n",
       "0              Wolfie's Deli       43.754875       -79.442438  Deli / Bodega  \n",
       "1                 Bagel Plus       43.755395       -79.440686     Restaurant  \n",
       "2                  Starbucks       43.755703       -79.440483    Coffee Shop  \n",
       "3  Best for Bride in Toronto       43.755720       -79.437883    Bridal Shop  \n",
       "4                Tim Hortons       43.754767       -79.443250    Coffee Shop  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check the size of the dataframe\n",
    "print(westtoronto_venues.shape)\n",
    "westtoronto_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood Latitude</th>\n",
       "      <th>Neighbourhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Brockton, Exhibition Place, Parkdale Village</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dovercourt Village, Dufferin</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>High Park, The Junction South</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Little Portugal, Trinity</th>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Parkdale, Roncesvalles</th>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Runnymede, Swansea</th>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              Neighbourhood Latitude  \\\n",
       "Neighbourhood                                                          \n",
       "Brockton, Exhibition Place, Parkdale Village                     100   \n",
       "Dovercourt Village, Dufferin                                      15   \n",
       "High Park, The Junction South                                     24   \n",
       "Little Portugal, Trinity                                          19   \n",
       "Parkdale, Roncesvalles                                            34   \n",
       "Runnymede, Swansea                                                49   \n",
       "\n",
       "                                              Neighbourhood Longitude  Venue  \\\n",
       "Neighbourhood                                                                  \n",
       "Brockton, Exhibition Place, Parkdale Village                      100    100   \n",
       "Dovercourt Village, Dufferin                                       15     15   \n",
       "High Park, The Junction South                                      24     24   \n",
       "Little Portugal, Trinity                                           19     19   \n",
       "Parkdale, Roncesvalles                                             34     34   \n",
       "Runnymede, Swansea                                                 49     49   \n",
       "\n",
       "                                              Venue Latitude  Venue Longitude  \\\n",
       "Neighbourhood                                                                   \n",
       "Brockton, Exhibition Place, Parkdale Village             100              100   \n",
       "Dovercourt Village, Dufferin                              15               15   \n",
       "High Park, The Junction South                             24               24   \n",
       "Little Portugal, Trinity                                  19               19   \n",
       "Parkdale, Roncesvalles                                    34               34   \n",
       "Runnymede, Swansea                                        49               49   \n",
       "\n",
       "                                              Venue Category  \n",
       "Neighbourhood                                                 \n",
       "Brockton, Exhibition Place, Parkdale Village             100  \n",
       "Dovercourt Village, Dufferin                              15  \n",
       "High Park, The Junction South                             24  \n",
       "Little Portugal, Trinity                                  19  \n",
       "Parkdale, Roncesvalles                                    34  \n",
       "Runnymede, Swansea                                        49  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_venues.groupby('Neighbourhood').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 107 uniques categories.\n"
     ]
    }
   ],
   "source": [
    "print('There are {} uniques categories.'.format(len(westtoronto_venues['Venue Category'].unique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Analyze Each Neighborhood "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>Bank</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Beer Bar</th>\n",
       "      <th>Beer Store</th>\n",
       "      <th>Bookstore</th>\n",
       "      <th>Breakfast Spot</th>\n",
       "      <th>Bridal Shop</th>\n",
       "      <th>Bubble Tea Shop</th>\n",
       "      <th>Burger Joint</th>\n",
       "      <th>Burrito Place</th>\n",
       "      <th>Butcher</th>\n",
       "      <th>Café</th>\n",
       "      <th>Caribbean Restaurant</th>\n",
       "      <th>Chinese Restaurant</th>\n",
       "      <th>Climbing Gym</th>\n",
       "      <th>Clothing Store</th>\n",
       "      <th>Coffee Shop</th>\n",
       "      <th>College Arts Building</th>\n",
       "      <th>College Gym</th>\n",
       "      <th>College Rec Center</th>\n",
       "      <th>Comfort Food Restaurant</th>\n",
       "      <th>Comic Shop</th>\n",
       "      <th>Convenience Store</th>\n",
       "      <th>Cosmetics Shop</th>\n",
       "      <th>Deli / Bodega</th>\n",
       "      <th>Department Store</th>\n",
       "      <th>Dessert Shop</th>\n",
       "      <th>Diner</th>\n",
       "      <th>Discount Store</th>\n",
       "      <th>Ethiopian Restaurant</th>\n",
       "      <th>Farmers Market</th>\n",
       "      <th>Fast Food Restaurant</th>\n",
       "      <th>Flower Shop</th>\n",
       "      <th>French Restaurant</th>\n",
       "      <th>Fried Chicken Joint</th>\n",
       "      <th>Frozen Yogurt Shop</th>\n",
       "      <th>Furniture / Home Store</th>\n",
       "      <th>Gastropub</th>\n",
       "      <th>General Entertainment</th>\n",
       "      <th>Gift Shop</th>\n",
       "      <th>Grocery Store</th>\n",
       "      <th>Gym</th>\n",
       "      <th>Gym / Fitness Center</th>\n",
       "      <th>Hardware Store</th>\n",
       "      <th>Hookah Bar</th>\n",
       "      <th>Hotel</th>\n",
       "      <th>Ice Cream Shop</th>\n",
       "      <th>Indian Restaurant</th>\n",
       "      <th>Intersection</th>\n",
       "      <th>Italian Restaurant</th>\n",
       "      <th>Japanese Restaurant</th>\n",
       "      <th>Jewelry Store</th>\n",
       "      <th>Lake</th>\n",
       "      <th>Lingerie Store</th>\n",
       "      <th>Liquor Store</th>\n",
       "      <th>Lounge</th>\n",
       "      <th>Market</th>\n",
       "      <th>Mexican Restaurant</th>\n",
       "      <th>Middle Eastern Restaurant</th>\n",
       "      <th>Miscellaneous Shop</th>\n",
       "      <th>Modern European Restaurant</th>\n",
       "      <th>Movie Theater</th>\n",
       "      <th>Music Venue</th>\n",
       "      <th>Nightclub</th>\n",
       "      <th>Noodle House</th>\n",
       "      <th>Office</th>\n",
       "      <th>Other Great Outdoors</th>\n",
       "      <th>Park</th>\n",
       "      <th>Performing Arts Venue</th>\n",
       "      <th>Pet Store</th>\n",
       "      <th>Pharmacy</th>\n",
       "      <th>Pizza Place</th>\n",
       "      <th>Playground</th>\n",
       "      <th>Plaza</th>\n",
       "      <th>Poutine Place</th>\n",
       "      <th>Pub</th>\n",
       "      <th>Ramen Restaurant</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Sandwich Place</th>\n",
       "      <th>Seafood Restaurant</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Smoke Shop</th>\n",
       "      <th>Snack Place</th>\n",
       "      <th>Spa</th>\n",
       "      <th>Sporting Goods Shop</th>\n",
       "      <th>Stadium</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Supermarket</th>\n",
       "      <th>Supplement Shop</th>\n",
       "      <th>Sushi Restaurant</th>\n",
       "      <th>Taco Place</th>\n",
       "      <th>Taiwanese Restaurant</th>\n",
       "      <th>Tanning Salon</th>\n",
       "      <th>Tea Room</th>\n",
       "      <th>Thai Restaurant</th>\n",
       "      <th>Theater</th>\n",
       "      <th>Thrift / Vintage Store</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Video Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Wings Joint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Neighbourhood  American Restaurant  Art Gallery  Bakery  Bank  \\\n",
       "0  Little Portugal, Trinity                    0            0       0     0   \n",
       "1  Little Portugal, Trinity                    0            0       0     0   \n",
       "2  Little Portugal, Trinity                    0            0       0     0   \n",
       "3  Little Portugal, Trinity                    0            0       0     0   \n",
       "4  Little Portugal, Trinity                    0            0       0     0   \n",
       "\n",
       "   Bar  Beer Bar  Beer Store  Bookstore  Breakfast Spot  Bridal Shop  \\\n",
       "0    0         0           0          0               0            0   \n",
       "1    0         0           0          0               0            0   \n",
       "2    0         0           0          0               0            0   \n",
       "3    0         0           0          0               0            1   \n",
       "4    0         0           0          0               0            0   \n",
       "\n",
       "   Bubble Tea Shop  Burger Joint  Burrito Place  Butcher  Café  \\\n",
       "0                0             0              0        0     0   \n",
       "1                0             0              0        0     0   \n",
       "2                0             0              0        0     0   \n",
       "3                0             0              0        0     0   \n",
       "4                0             0              0        0     0   \n",
       "\n",
       "   Caribbean Restaurant  Chinese Restaurant  Climbing Gym  Clothing Store  \\\n",
       "0                     0                   0             0               0   \n",
       "1                     0                   0             0               0   \n",
       "2                     0                   0             0               0   \n",
       "3                     0                   0             0               0   \n",
       "4                     0                   0             0               0   \n",
       "\n",
       "   Coffee Shop  College Arts Building  College Gym  College Rec Center  \\\n",
       "0            0                      0            0                   0   \n",
       "1            0                      0            0                   0   \n",
       "2            1                      0            0                   0   \n",
       "3            0                      0            0                   0   \n",
       "4            1                      0            0                   0   \n",
       "\n",
       "   Comfort Food Restaurant  Comic Shop  Convenience Store  Cosmetics Shop  \\\n",
       "0                        0           0                  0               0   \n",
       "1                        0           0                  0               0   \n",
       "2                        0           0                  0               0   \n",
       "3                        0           0                  0               0   \n",
       "4                        0           0                  0               0   \n",
       "\n",
       "   Deli / Bodega  Department Store  Dessert Shop  Diner  Discount Store  \\\n",
       "0              1                 0             0      0               0   \n",
       "1              0                 0             0      0               0   \n",
       "2              0                 0             0      0               0   \n",
       "3              0                 0             0      0               0   \n",
       "4              0                 0             0      0               0   \n",
       "\n",
       "   Ethiopian Restaurant  Farmers Market  Fast Food Restaurant  Flower Shop  \\\n",
       "0                     0               0                     0            0   \n",
       "1                     0               0                     0            0   \n",
       "2                     0               0                     0            0   \n",
       "3                     0               0                     0            0   \n",
       "4                     0               0                     0            0   \n",
       "\n",
       "   French Restaurant  Fried Chicken Joint  Frozen Yogurt Shop  \\\n",
       "0                  0                    0                   0   \n",
       "1                  0                    0                   0   \n",
       "2                  0                    0                   0   \n",
       "3                  0                    0                   0   \n",
       "4                  0                    0                   0   \n",
       "\n",
       "   Furniture / Home Store  Gastropub  General Entertainment  Gift Shop  \\\n",
       "0                       0          0                      0          0   \n",
       "1                       0          0                      0          0   \n",
       "2                       0          0                      0          0   \n",
       "3                       0          0                      0          0   \n",
       "4                       0          0                      0          0   \n",
       "\n",
       "   Grocery Store  Gym  Gym / Fitness Center  Hardware Store  Hookah Bar  \\\n",
       "0              0    0                     0               0           0   \n",
       "1              0    0                     0               0           0   \n",
       "2              0    0                     0               0           0   \n",
       "3              0    0                     0               0           0   \n",
       "4              0    0                     0               0           0   \n",
       "\n",
       "   Hotel  Ice Cream Shop  Indian Restaurant  Intersection  Italian Restaurant  \\\n",
       "0      0               0                  0             0                   0   \n",
       "1      0               0                  0             0                   0   \n",
       "2      0               0                  0             0                   0   \n",
       "3      0               0                  0             0                   0   \n",
       "4      0               0                  0             0                   0   \n",
       "\n",
       "   Japanese Restaurant  Jewelry Store  Lake  Lingerie Store  Liquor Store  \\\n",
       "0                    0              0     0               0             0   \n",
       "1                    0              0     0               0             0   \n",
       "2                    0              0     0               0             0   \n",
       "3                    0              0     0               0             0   \n",
       "4                    0              0     0               0             0   \n",
       "\n",
       "   Lounge  Market  Mexican Restaurant  Middle Eastern Restaurant  \\\n",
       "0       0       0                   0                          0   \n",
       "1       0       0                   0                          0   \n",
       "2       0       0                   0                          0   \n",
       "3       0       0                   0                          0   \n",
       "4       0       0                   0                          0   \n",
       "\n",
       "   Miscellaneous Shop  Modern European Restaurant  Movie Theater  Music Venue  \\\n",
       "0                   0                           0              0            0   \n",
       "1                   0                           0              0            0   \n",
       "2                   0                           0              0            0   \n",
       "3                   0                           0              0            0   \n",
       "4                   0                           0              0            0   \n",
       "\n",
       "   Nightclub  Noodle House  Office  Other Great Outdoors  Park  \\\n",
       "0          0             0       0                     0     0   \n",
       "1          0             0       0                     0     0   \n",
       "2          0             0       0                     0     0   \n",
       "3          0             0       0                     0     0   \n",
       "4          0             0       0                     0     0   \n",
       "\n",
       "   Performing Arts Venue  Pet Store  Pharmacy  Pizza Place  Playground  Plaza  \\\n",
       "0                      0          0         0            0           0      0   \n",
       "1                      0          0         0            0           0      0   \n",
       "2                      0          0         0            0           0      0   \n",
       "3                      0          0         0            0           0      0   \n",
       "4                      0          0         0            0           0      0   \n",
       "\n",
       "   Poutine Place  Pub  Ramen Restaurant  Restaurant  Sandwich Place  \\\n",
       "0              0    0                 0           0               0   \n",
       "1              0    0                 0           1               0   \n",
       "2              0    0                 0           0               0   \n",
       "3              0    0                 0           0               0   \n",
       "4              0    0                 0           0               0   \n",
       "\n",
       "   Seafood Restaurant  Shopping Mall  Smoke Shop  Snack Place  Spa  \\\n",
       "0                   0              0           0            0    0   \n",
       "1                   0              0           0            0    0   \n",
       "2                   0              0           0            0    0   \n",
       "3                   0              0           0            0    0   \n",
       "4                   0              0           0            0    0   \n",
       "\n",
       "   Sporting Goods Shop  Stadium  Steakhouse  Supermarket  Supplement Shop  \\\n",
       "0                    0        0           0            0                0   \n",
       "1                    0        0           0            0                0   \n",
       "2                    0        0           0            0                0   \n",
       "3                    0        0           0            0                0   \n",
       "4                    0        0           0            0                0   \n",
       "\n",
       "   Sushi Restaurant  Taco Place  Taiwanese Restaurant  Tanning Salon  \\\n",
       "0                 0           0                     0              0   \n",
       "1                 0           0                     0              0   \n",
       "2                 0           0                     0              0   \n",
       "3                 0           0                     0              0   \n",
       "4                 0           0                     0              0   \n",
       "\n",
       "   Tea Room  Thai Restaurant  Theater  Thrift / Vintage Store  \\\n",
       "0         0                0        0                       0   \n",
       "1         0                0        0                       0   \n",
       "2         0                0        0                       0   \n",
       "3         0                0        0                       0   \n",
       "4         0                0        0                       0   \n",
       "\n",
       "   Toy / Game Store  Vegetarian / Vegan Restaurant  Video Game Store  \\\n",
       "0                 0                              0                 0   \n",
       "1                 0                              0                 0   \n",
       "2                 0                              0                 0   \n",
       "3                 0                              0                 0   \n",
       "4                 0                              0                 0   \n",
       "\n",
       "   Video Store  Vietnamese Restaurant  Wine Bar  Wings Joint  \n",
       "0            0                      0         0            0  \n",
       "1            0                      0         0            0  \n",
       "2            0                      0         0            0  \n",
       "3            0                      0         0            0  \n",
       "4            0                      0         0            0  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# one hot encoding\n",
    "westtoronto_onehot = pd.get_dummies(westtoronto_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n",
    "\n",
    "# add neighborhood column back to dataframe\n",
    "westtoronto_onehot['Neighbourhood'] = westtoronto_venues['Neighbourhood'] \n",
    "\n",
    "# move neighborhood column to the first column\n",
    "fixed_columns = [westtoronto_onehot.columns[-1]] + list(westtoronto_onehot.columns[:-1])\n",
    "westtoronto_onehot = westtoronto_onehot[fixed_columns]\n",
    "\n",
    "westtoronto_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(241, 108)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_onehot.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>Bakery</th>\n",
       "      <th>Bank</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Beer Bar</th>\n",
       "      <th>Beer Store</th>\n",
       "      <th>Bookstore</th>\n",
       "      <th>Breakfast Spot</th>\n",
       "      <th>Bridal Shop</th>\n",
       "      <th>Bubble Tea Shop</th>\n",
       "      <th>Burger Joint</th>\n",
       "      <th>Burrito Place</th>\n",
       "      <th>Butcher</th>\n",
       "      <th>Café</th>\n",
       "      <th>Caribbean Restaurant</th>\n",
       "      <th>Chinese Restaurant</th>\n",
       "      <th>Climbing Gym</th>\n",
       "      <th>Clothing Store</th>\n",
       "      <th>Coffee Shop</th>\n",
       "      <th>College Arts Building</th>\n",
       "      <th>College Gym</th>\n",
       "      <th>College Rec Center</th>\n",
       "      <th>Comfort Food Restaurant</th>\n",
       "      <th>Comic Shop</th>\n",
       "      <th>Convenience Store</th>\n",
       "      <th>Cosmetics Shop</th>\n",
       "      <th>Deli / Bodega</th>\n",
       "      <th>Department Store</th>\n",
       "      <th>Dessert Shop</th>\n",
       "      <th>Diner</th>\n",
       "      <th>Discount Store</th>\n",
       "      <th>Ethiopian Restaurant</th>\n",
       "      <th>Farmers Market</th>\n",
       "      <th>Fast Food Restaurant</th>\n",
       "      <th>Flower Shop</th>\n",
       "      <th>French Restaurant</th>\n",
       "      <th>Fried Chicken Joint</th>\n",
       "      <th>Frozen Yogurt Shop</th>\n",
       "      <th>Furniture / Home Store</th>\n",
       "      <th>Gastropub</th>\n",
       "      <th>General Entertainment</th>\n",
       "      <th>Gift Shop</th>\n",
       "      <th>Grocery Store</th>\n",
       "      <th>Gym</th>\n",
       "      <th>Gym / Fitness Center</th>\n",
       "      <th>Hardware Store</th>\n",
       "      <th>Hookah Bar</th>\n",
       "      <th>Hotel</th>\n",
       "      <th>Ice Cream Shop</th>\n",
       "      <th>Indian Restaurant</th>\n",
       "      <th>Intersection</th>\n",
       "      <th>Italian Restaurant</th>\n",
       "      <th>Japanese Restaurant</th>\n",
       "      <th>Jewelry Store</th>\n",
       "      <th>Lake</th>\n",
       "      <th>Lingerie Store</th>\n",
       "      <th>Liquor Store</th>\n",
       "      <th>Lounge</th>\n",
       "      <th>Market</th>\n",
       "      <th>Mexican Restaurant</th>\n",
       "      <th>Middle Eastern Restaurant</th>\n",
       "      <th>Miscellaneous Shop</th>\n",
       "      <th>Modern European Restaurant</th>\n",
       "      <th>Movie Theater</th>\n",
       "      <th>Music Venue</th>\n",
       "      <th>Nightclub</th>\n",
       "      <th>Noodle House</th>\n",
       "      <th>Office</th>\n",
       "      <th>Other Great Outdoors</th>\n",
       "      <th>Park</th>\n",
       "      <th>Performing Arts Venue</th>\n",
       "      <th>Pet Store</th>\n",
       "      <th>Pharmacy</th>\n",
       "      <th>Pizza Place</th>\n",
       "      <th>Playground</th>\n",
       "      <th>Plaza</th>\n",
       "      <th>Poutine Place</th>\n",
       "      <th>Pub</th>\n",
       "      <th>Ramen Restaurant</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Sandwich Place</th>\n",
       "      <th>Seafood Restaurant</th>\n",
       "      <th>Shopping Mall</th>\n",
       "      <th>Smoke Shop</th>\n",
       "      <th>Snack Place</th>\n",
       "      <th>Spa</th>\n",
       "      <th>Sporting Goods Shop</th>\n",
       "      <th>Stadium</th>\n",
       "      <th>Steakhouse</th>\n",
       "      <th>Supermarket</th>\n",
       "      <th>Supplement Shop</th>\n",
       "      <th>Sushi Restaurant</th>\n",
       "      <th>Taco Place</th>\n",
       "      <th>Taiwanese Restaurant</th>\n",
       "      <th>Tanning Salon</th>\n",
       "      <th>Tea Room</th>\n",
       "      <th>Thai Restaurant</th>\n",
       "      <th>Theater</th>\n",
       "      <th>Thrift / Vintage Store</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Video Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Wings Joint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.066667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.041667</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.105263</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.147059</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.029412</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.061224</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.061224</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040816</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.061224</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Neighbourhood  American Restaurant  \\\n",
       "0  Brockton, Exhibition Place, Parkdale Village             0.010000   \n",
       "1                  Dovercourt Village, Dufferin             0.000000   \n",
       "2                 High Park, The Junction South             0.000000   \n",
       "3                      Little Portugal, Trinity             0.000000   \n",
       "4                        Parkdale, Roncesvalles             0.000000   \n",
       "5                            Runnymede, Swansea             0.020408   \n",
       "\n",
       "   Art Gallery    Bakery      Bank       Bar  Beer Bar  Beer Store  Bookstore  \\\n",
       "0         0.01  0.020000  0.010000  0.010000  0.010000    0.000000   0.020000   \n",
       "1         0.00  0.066667  0.000000  0.000000  0.000000    0.000000   0.000000   \n",
       "2         0.00  0.041667  0.000000  0.041667  0.000000    0.000000   0.000000   \n",
       "3         0.00  0.000000  0.052632  0.000000  0.000000    0.000000   0.000000   \n",
       "4         0.00  0.058824  0.000000  0.058824  0.029412    0.029412   0.058824   \n",
       "5         0.00  0.040816  0.020408  0.000000  0.000000    0.020408   0.000000   \n",
       "\n",
       "   Breakfast Spot  Bridal Shop  Bubble Tea Shop  Burger Joint  Burrito Place  \\\n",
       "0        0.000000     0.000000             0.02      0.010000       0.010000   \n",
       "1        0.000000     0.000000             0.00      0.066667       0.066667   \n",
       "2        0.083333     0.000000             0.00      0.000000       0.041667   \n",
       "3        0.000000     0.052632             0.00      0.000000       0.000000   \n",
       "4        0.000000     0.000000             0.00      0.000000       0.000000   \n",
       "5        0.020408     0.000000             0.00      0.000000       0.000000   \n",
       "\n",
       "    Butcher      Café  Caribbean Restaurant  Chinese Restaurant  Climbing Gym  \\\n",
       "0  0.000000  0.030000              0.000000            0.010000      0.000000   \n",
       "1  0.000000  0.000000              0.000000            0.000000      0.000000   \n",
       "2  0.000000  0.125000              0.041667            0.000000      0.041667   \n",
       "3  0.000000  0.000000              0.000000            0.052632      0.000000   \n",
       "4  0.000000  0.147059              0.000000            0.029412      0.000000   \n",
       "5  0.020408  0.040816              0.020408            0.020408      0.000000   \n",
       "\n",
       "   Clothing Store  Coffee Shop  College Arts Building  College Gym  \\\n",
       "0            0.07     0.080000               0.000000     0.000000   \n",
       "1            0.00     0.000000               0.000000     0.000000   \n",
       "2            0.00     0.083333               0.000000     0.000000   \n",
       "3            0.00     0.105263               0.000000     0.000000   \n",
       "4            0.00     0.000000               0.029412     0.029412   \n",
       "5            0.00     0.061224               0.000000     0.000000   \n",
       "\n",
       "   College Rec Center  Comfort Food Restaurant  Comic Shop  Convenience Store  \\\n",
       "0                0.01                 0.000000        0.01           0.000000   \n",
       "1                0.00                 0.000000        0.00           0.066667   \n",
       "2                0.00                 0.000000        0.00           0.041667   \n",
       "3                0.00                 0.000000        0.00           0.000000   \n",
       "4                0.00                 0.029412        0.00           0.000000   \n",
       "5                0.00                 0.000000        0.00           0.000000   \n",
       "\n",
       "   Cosmetics Shop  Deli / Bodega  Department Store  Dessert Shop     Diner  \\\n",
       "0            0.04       0.000000              0.01      0.010000  0.010000   \n",
       "1            0.00       0.000000              0.00      0.000000  0.000000   \n",
       "2            0.00       0.000000              0.00      0.000000  0.000000   \n",
       "3            0.00       0.052632              0.00      0.000000  0.052632   \n",
       "4            0.00       0.000000              0.00      0.029412  0.000000   \n",
       "5            0.00       0.020408              0.00      0.000000  0.020408   \n",
       "\n",
       "   Discount Store  Ethiopian Restaurant  Farmers Market  Fast Food Restaurant  \\\n",
       "0        0.000000                  0.01        0.000000              0.030000   \n",
       "1        0.066667                  0.00        0.000000              0.066667   \n",
       "2        0.000000                  0.00        0.000000              0.000000   \n",
       "3        0.000000                  0.00        0.000000              0.052632   \n",
       "4        0.000000                  0.00        0.000000              0.000000   \n",
       "5        0.000000                  0.00        0.020408              0.000000   \n",
       "\n",
       "   Flower Shop  French Restaurant  Fried Chicken Joint  Frozen Yogurt Shop  \\\n",
       "0     0.000000           0.000000             0.000000            0.000000   \n",
       "1     0.066667           0.000000             0.000000            0.000000   \n",
       "2     0.000000           0.000000             0.000000            0.000000   \n",
       "3     0.000000           0.000000             0.052632            0.052632   \n",
       "4     0.000000           0.029412             0.000000            0.000000   \n",
       "5     0.020408           0.000000             0.000000            0.000000   \n",
       "\n",
       "   Furniture / Home Store  Gastropub  General Entertainment  Gift Shop  \\\n",
       "0                0.010000   0.010000               0.000000   0.000000   \n",
       "1                0.000000   0.000000               0.000000   0.000000   \n",
       "2                0.041667   0.000000               0.000000   0.000000   \n",
       "3                0.000000   0.000000               0.000000   0.000000   \n",
       "4                0.000000   0.000000               0.000000   0.000000   \n",
       "5                0.000000   0.020408               0.020408   0.020408   \n",
       "\n",
       "   Grocery Store       Gym  Gym / Fitness Center  Hardware Store  Hookah Bar  \\\n",
       "0       0.000000  0.010000                  0.01        0.000000        0.01   \n",
       "1       0.066667  0.066667                  0.00        0.066667        0.00   \n",
       "2       0.041667  0.041667                  0.00        0.000000        0.00   \n",
       "3       0.000000  0.000000                  0.00        0.000000        0.00   \n",
       "4       0.000000  0.029412                  0.00        0.000000        0.00   \n",
       "5       0.020408  0.000000                  0.00        0.000000        0.00   \n",
       "\n",
       "   Hotel  Ice Cream Shop  Indian Restaurant  Intersection  Italian Restaurant  \\\n",
       "0   0.01        0.020000           0.000000      0.000000            0.030000   \n",
       "1   0.00        0.000000           0.000000      0.000000            0.000000   \n",
       "2   0.00        0.000000           0.000000      0.041667            0.041667   \n",
       "3   0.00        0.000000           0.000000      0.000000            0.000000   \n",
       "4   0.00        0.000000           0.000000      0.000000            0.058824   \n",
       "5   0.00        0.020408           0.020408      0.000000            0.040816   \n",
       "\n",
       "   Japanese Restaurant  Jewelry Store  Lake  Lingerie Store  Liquor Store  \\\n",
       "0             0.020000       0.000000  0.01            0.02      0.000000   \n",
       "1             0.000000       0.000000  0.00            0.00      0.000000   \n",
       "2             0.000000       0.000000  0.00            0.00      0.000000   \n",
       "3             0.000000       0.000000  0.00            0.00      0.000000   \n",
       "4             0.058824       0.000000  0.00            0.00      0.000000   \n",
       "5             0.020408       0.020408  0.00            0.00      0.020408   \n",
       "\n",
       "   Lounge    Market  Mexican Restaurant  Middle Eastern Restaurant  \\\n",
       "0    0.01  0.000000                0.01                   0.030000   \n",
       "1    0.00  0.000000                0.00                   0.000000   \n",
       "2    0.00  0.000000                0.00                   0.000000   \n",
       "3    0.00  0.000000                0.00                   0.052632   \n",
       "4    0.00  0.000000                0.00                   0.000000   \n",
       "5    0.00  0.040816                0.00                   0.000000   \n",
       "\n",
       "   Miscellaneous Shop  Modern European Restaurant  Movie Theater  Music Venue  \\\n",
       "0                0.01                        0.01           0.01         0.01   \n",
       "1                0.00                        0.00           0.00         0.00   \n",
       "2                0.00                        0.00           0.00         0.00   \n",
       "3                0.00                        0.00           0.00         0.00   \n",
       "4                0.00                        0.00           0.00         0.00   \n",
       "5                0.00                        0.00           0.00         0.00   \n",
       "\n",
       "   Nightclub  Noodle House    Office  Other Great Outdoors      Park  \\\n",
       "0   0.000000      0.000000  0.010000                  0.01  0.000000   \n",
       "1   0.000000      0.000000  0.000000                  0.00  0.000000   \n",
       "2   0.000000      0.000000  0.000000                  0.00  0.000000   \n",
       "3   0.000000      0.000000  0.000000                  0.00  0.000000   \n",
       "4   0.029412      0.029412  0.000000                  0.00  0.000000   \n",
       "5   0.000000      0.000000  0.020408                  0.00  0.040816   \n",
       "\n",
       "   Performing Arts Venue  Pet Store  Pharmacy  Pizza Place  Playground  Plaza  \\\n",
       "0               0.000000   0.000000  0.000000     0.020000    0.000000   0.01   \n",
       "1               0.000000   0.000000  0.000000     0.000000    0.000000   0.00   \n",
       "2               0.083333   0.041667  0.000000     0.000000    0.000000   0.00   \n",
       "3               0.000000   0.000000  0.052632     0.052632    0.000000   0.00   \n",
       "4               0.000000   0.000000  0.000000     0.000000    0.000000   0.00   \n",
       "5               0.000000   0.020408  0.020408     0.061224    0.020408   0.00   \n",
       "\n",
       "   Poutine Place       Pub  Ramen Restaurant  Restaurant  Sandwich Place  \\\n",
       "0       0.010000  0.010000              0.02    0.020000        0.010000   \n",
       "1       0.000000  0.000000              0.00    0.000000        0.066667   \n",
       "2       0.000000  0.000000              0.00    0.041667        0.041667   \n",
       "3       0.000000  0.000000              0.00    0.052632        0.052632   \n",
       "4       0.029412  0.029412              0.00    0.058824        0.029412   \n",
       "5       0.000000  0.040816              0.00    0.061224        0.020408   \n",
       "\n",
       "   Seafood Restaurant  Shopping Mall  Smoke Shop  Snack Place   Spa  \\\n",
       "0                0.01       0.010000        0.01     0.000000  0.01   \n",
       "1                0.00       0.000000        0.00     0.000000  0.00   \n",
       "2                0.00       0.000000        0.00     0.000000  0.00   \n",
       "3                0.00       0.052632        0.00     0.000000  0.00   \n",
       "4                0.00       0.000000        0.00     0.000000  0.00   \n",
       "5                0.00       0.000000        0.00     0.020408  0.00   \n",
       "\n",
       "   Sporting Goods Shop   Stadium  Steakhouse  Supermarket  Supplement Shop  \\\n",
       "0                 0.02  0.000000        0.01     0.000000         0.000000   \n",
       "1                 0.00  0.000000        0.00     0.000000         0.066667   \n",
       "2                 0.00  0.041667        0.00     0.000000         0.000000   \n",
       "3                 0.00  0.000000        0.00     0.052632         0.000000   \n",
       "4                 0.00  0.000000        0.00     0.000000         0.000000   \n",
       "5                 0.00  0.000000        0.00     0.000000         0.000000   \n",
       "\n",
       "   Sushi Restaurant  Taco Place  Taiwanese Restaurant  Tanning Salon  \\\n",
       "0          0.000000        0.01              0.000000       0.010000   \n",
       "1          0.000000        0.00              0.000000       0.066667   \n",
       "2          0.000000        0.00              0.000000       0.000000   \n",
       "3          0.052632        0.00              0.000000       0.000000   \n",
       "4          0.029412        0.00              0.000000       0.000000   \n",
       "5          0.000000        0.00              0.020408       0.000000   \n",
       "\n",
       "   Tea Room  Thai Restaurant   Theater  Thrift / Vintage Store  \\\n",
       "0      0.01         0.010000  0.020000                0.000000   \n",
       "1      0.00         0.000000  0.000000                0.066667   \n",
       "2      0.00         0.000000  0.000000                0.000000   \n",
       "3      0.00         0.000000  0.000000                0.000000   \n",
       "4      0.00         0.000000  0.029412                0.000000   \n",
       "5      0.00         0.020408  0.000000                0.000000   \n",
       "\n",
       "   Toy / Game Store  Vegetarian / Vegan Restaurant  Video Game Store  \\\n",
       "0              0.01                           0.01          0.010000   \n",
       "1              0.00                           0.00          0.000000   \n",
       "2              0.00                           0.00          0.000000   \n",
       "3              0.00                           0.00          0.000000   \n",
       "4              0.00                           0.00          0.029412   \n",
       "5              0.00                           0.00          0.000000   \n",
       "\n",
       "   Video Store  Vietnamese Restaurant  Wine Bar  Wings Joint  \n",
       "0     0.000000                   0.01      0.01     0.000000  \n",
       "1     0.000000                   0.00      0.00     0.066667  \n",
       "2     0.000000                   0.00      0.00     0.000000  \n",
       "3     0.052632                   0.00      0.00     0.000000  \n",
       "4     0.000000                   0.00      0.00     0.000000  \n",
       "5     0.000000                   0.00      0.00     0.000000  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_grouped = westtoronto_onehot.groupby('Neighbourhood').mean().reset_index()\n",
    "westtoronto_grouped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6, 108)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_grouped.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Brockton, Exhibition Place, Parkdale Village----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.08\n",
      "1      Clothing Store  0.07\n",
      "2      Cosmetics Shop  0.04\n",
      "3                Café  0.03\n",
      "4  Italian Restaurant  0.03\n",
      "\n",
      "\n",
      "----Dovercourt Village, Dufferin----\n",
      "               venue  freq\n",
      "0        Wings Joint  0.07\n",
      "1      Burrito Place  0.07\n",
      "2     Discount Store  0.07\n",
      "3     Sandwich Place  0.07\n",
      "4  Convenience Store  0.07\n",
      "\n",
      "\n",
      "----High Park, The Junction South----\n",
      "                   venue  freq\n",
      "0                   Café  0.12\n",
      "1         Breakfast Spot  0.08\n",
      "2  Performing Arts Venue  0.08\n",
      "3            Coffee Shop  0.08\n",
      "4           Climbing Gym  0.04\n",
      "\n",
      "\n",
      "----Little Portugal, Trinity----\n",
      "                venue  freq\n",
      "0         Coffee Shop  0.11\n",
      "1       Shopping Mall  0.05\n",
      "2  Chinese Restaurant  0.05\n",
      "3          Restaurant  0.05\n",
      "4      Sandwich Place  0.05\n",
      "\n",
      "\n",
      "----Parkdale, Roncesvalles----\n",
      "                 venue  freq\n",
      "0                 Café  0.15\n",
      "1  Japanese Restaurant  0.06\n",
      "2   Italian Restaurant  0.06\n",
      "3               Bakery  0.06\n",
      "4           Restaurant  0.06\n",
      "\n",
      "\n",
      "----Runnymede, Swansea----\n",
      "                venue  freq\n",
      "0          Restaurant  0.06\n",
      "1         Coffee Shop  0.06\n",
      "2         Pizza Place  0.06\n",
      "3                Café  0.04\n",
      "4  Italian Restaurant  0.04\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues = 5\n",
    "\n",
    "for hood in westtoronto_grouped['Neighbourhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp = westtoronto_grouped[westtoronto_grouped['Neighbourhood'] == hood].T.reset_index()\n",
    "    temp.columns = ['venue','freq']\n",
    "    temp = temp.iloc[1:]\n",
    "    temp['freq'] = temp['freq'].astype(float)\n",
    "    temp = temp.round({'freq': 2})\n",
    "    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "def return_most_common_venues(row, num_top_venues):\n",
    "    row_categories = row.iloc[1:]\n",
    "    row_categories_sorted = row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Café</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Ice Cream Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>Wings Joint</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Flower Shop</td>\n",
       "      <td>Burrito Place</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Tanning Salon</td>\n",
       "      <td>Supplement Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Performing Arts Venue</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Pet Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Climbing Gym</td>\n",
       "      <td>Stadium</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Shopping Mall</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Fried Chicken Joint</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Frozen Yogurt Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>Café</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Bookstore</td>\n",
       "      <td>Pub</td>\n",
       "      <td>College Arts Building</td>\n",
       "      <td>Sandwich Place</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Neighbourhood 1st Most Common Venue  \\\n",
       "0  Brockton, Exhibition Place, Parkdale Village           Coffee Shop   \n",
       "1                  Dovercourt Village, Dufferin           Wings Joint   \n",
       "2                 High Park, The Junction South                  Café   \n",
       "3                      Little Portugal, Trinity           Coffee Shop   \n",
       "4                        Parkdale, Roncesvalles                  Café   \n",
       "\n",
       "  2nd Most Common Venue  3rd Most Common Venue 4th Most Common Venue  \\\n",
       "0        Clothing Store         Cosmetics Shop    Italian Restaurant   \n",
       "1         Grocery Store         Discount Store        Sandwich Place   \n",
       "2           Coffee Shop  Performing Arts Venue        Breakfast Spot   \n",
       "3         Deli / Bodega          Shopping Mall    Chinese Restaurant   \n",
       "4   Japanese Restaurant                 Bakery    Italian Restaurant   \n",
       "\n",
       "       5th Most Common Venue      6th Most Common Venue  \\\n",
       "0                       Café  Middle Eastern Restaurant   \n",
       "1       Fast Food Restaurant                Flower Shop   \n",
       "2                  Pet Store             Sandwich Place   \n",
       "3  Middle Eastern Restaurant             Sandwich Place   \n",
       "4                        Bar                 Restaurant   \n",
       "\n",
       "    7th Most Common Venue 8th Most Common Venue  9th Most Common Venue  \\\n",
       "0    Fast Food Restaurant           Pizza Place    Sporting Goods Shop   \n",
       "1           Burrito Place          Burger Joint          Tanning Salon   \n",
       "2  Furniture / Home Store          Climbing Gym                Stadium   \n",
       "3             Supermarket   Fried Chicken Joint       Sushi Restaurant   \n",
       "4               Bookstore                   Pub  College Arts Building   \n",
       "\n",
       "  10th Most Common Venue  \n",
       "0         Ice Cream Shop  \n",
       "1        Supplement Shop  \n",
       "2   Caribbean Restaurant  \n",
       "3     Frozen Yogurt Shop  \n",
       "4         Sandwich Place  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues = 10\n",
    "\n",
    "indicators = ['st', 'nd', 'rd']\n",
    "\n",
    "# create columns according to number of top venues\n",
    "columns = ['Neighbourhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "\n",
    "# create a new dataframe\n",
    "neighbourhoods_venues_sorted = pd.DataFrame(columns=columns)\n",
    "neighbourhoods_venues_sorted['Neighbourhood'] = westtoronto_grouped['Neighbourhood']\n",
    "\n",
    "for ind in np.arange(westtoronto_grouped.shape[0]):\n",
    "    neighbourhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(westtoronto_grouped.iloc[ind, :], num_top_venues)\n",
    "\n",
    "neighbourhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5.Cluster Neigbourhood"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 2, 4, 1, 0, 3], dtype=int32)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# set number of clusters\n",
    "kclusters = 5\n",
    "\n",
    "westtoronto_grouped_clustering = westtoronto_grouped.drop('Neighbourhood', 1)\n",
    "\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(westtoronto_grouped_clustering)\n",
    "\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PostalCode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M6J</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Little Portugal, Trinity</td>\n",
       "      <td>43.754328</td>\n",
       "      <td>-79.442259</td>\n",
       "      <td>1</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Shopping Mall</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Fried Chicken Joint</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Frozen Yogurt Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M6S</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>43.667967</td>\n",
       "      <td>-79.367675</td>\n",
       "      <td>3</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Park</td>\n",
       "      <td>Café</td>\n",
       "      <td>Market</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M6K</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Brockton, Exhibition Place, Parkdale Village</td>\n",
       "      <td>43.657162</td>\n",
       "      <td>-79.378937</td>\n",
       "      <td>3</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Café</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Ice Cream Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M6R</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Parkdale, Roncesvalles</td>\n",
       "      <td>43.662696</td>\n",
       "      <td>-79.400049</td>\n",
       "      <td>0</td>\n",
       "      <td>Café</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Bookstore</td>\n",
       "      <td>Pub</td>\n",
       "      <td>College Arts Building</td>\n",
       "      <td>Sandwich Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M6P</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>43.636847</td>\n",
       "      <td>-79.428191</td>\n",
       "      <td>4</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Performing Arts Venue</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Pet Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Climbing Gym</td>\n",
       "      <td>Stadium</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>M6H</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>43.628841</td>\n",
       "      <td>-79.520999</td>\n",
       "      <td>2</td>\n",
       "      <td>Wings Joint</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Flower Shop</td>\n",
       "      <td>Burrito Place</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Tanning Salon</td>\n",
       "      <td>Supplement Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PostalCode       Borough                                 Neighbourhood  \\\n",
       "0        M6J  West Toronto                      Little Portugal, Trinity   \n",
       "1        M6S  West Toronto                            Runnymede, Swansea   \n",
       "2        M6K  West Toronto  Brockton, Exhibition Place, Parkdale Village   \n",
       "3        M6R  West Toronto                        Parkdale, Roncesvalles   \n",
       "4        M6P  West Toronto                 High Park, The Junction South   \n",
       "5        M6H  West Toronto                  Dovercourt Village, Dufferin   \n",
       "\n",
       "    Latitude  Longitude  Cluster Labels 1st Most Common Venue  \\\n",
       "0  43.754328 -79.442259               1           Coffee Shop   \n",
       "1  43.667967 -79.367675               3           Pizza Place   \n",
       "2  43.657162 -79.378937               3           Coffee Shop   \n",
       "3  43.662696 -79.400049               0                  Café   \n",
       "4  43.636847 -79.428191               4                  Café   \n",
       "5  43.628841 -79.520999               2           Wings Joint   \n",
       "\n",
       "  2nd Most Common Venue  3rd Most Common Venue 4th Most Common Venue  \\\n",
       "0         Deli / Bodega          Shopping Mall    Chinese Restaurant   \n",
       "1            Restaurant            Coffee Shop                Bakery   \n",
       "2        Clothing Store         Cosmetics Shop    Italian Restaurant   \n",
       "3   Japanese Restaurant                 Bakery    Italian Restaurant   \n",
       "4           Coffee Shop  Performing Arts Venue        Breakfast Spot   \n",
       "5         Grocery Store         Discount Store        Sandwich Place   \n",
       "\n",
       "       5th Most Common Venue      6th Most Common Venue  \\\n",
       "0  Middle Eastern Restaurant             Sandwich Place   \n",
       "1                        Pub                       Park   \n",
       "2                       Café  Middle Eastern Restaurant   \n",
       "3                        Bar                 Restaurant   \n",
       "4                  Pet Store             Sandwich Place   \n",
       "5       Fast Food Restaurant                Flower Shop   \n",
       "\n",
       "    7th Most Common Venue 8th Most Common Venue  9th Most Common Venue  \\\n",
       "0             Supermarket   Fried Chicken Joint       Sushi Restaurant   \n",
       "1                    Café                Market     Italian Restaurant   \n",
       "2    Fast Food Restaurant           Pizza Place    Sporting Goods Shop   \n",
       "3               Bookstore                   Pub  College Arts Building   \n",
       "4  Furniture / Home Store          Climbing Gym                Stadium   \n",
       "5           Burrito Place          Burger Joint          Tanning Salon   \n",
       "\n",
       "  10th Most Common Venue  \n",
       "0     Frozen Yogurt Shop  \n",
       "1    Japanese Restaurant  \n",
       "2         Ice Cream Shop  \n",
       "3         Sandwich Place  \n",
       "4   Caribbean Restaurant  \n",
       "5        Supplement Shop  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# add clustering labels\n",
    "neighbourhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "westtoronto_merged = westtoronto_data\n",
    "\n",
    "# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\n",
    "westtoronto_merged = westtoronto_merged.join(neighbourhoods_venues_sorted.set_index('Neighbourhood'), on='Neighbourhood', how = 'right')\n",
    "\n",
    "westtoronto_merged # check the last columns!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7f746ecaf630>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create the map to visualize the resulting clusters\n",
    "# create map\n",
    "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i*x)**2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(westtoronto_merged['Latitude'], westtoronto_merged['Longitude'], westtoronto_merged['Neighbourhood'], westtoronto_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius=5,\n",
    "        popup=label,\n",
    "        color=rainbow[cluster-1],\n",
    "        fill=True,\n",
    "        fill_color=rainbow[cluster-1],\n",
    "        fill_opacity=0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5. Examine Each Cluster"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>0</td>\n",
       "      <td>Café</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Bookstore</td>\n",
       "      <td>Pub</td>\n",
       "      <td>College Arts Building</td>\n",
       "      <td>Sandwich Place</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Borough  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "3  West Toronto               0                  Café   Japanese Restaurant   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "3                Bakery    Italian Restaurant                   Bar   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "3            Restaurant             Bookstore                   Pub   \n",
       "\n",
       "   9th Most Common Venue 10th Most Common Venue  \n",
       "3  College Arts Building         Sandwich Place  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_merged.loc[westtoronto_merged['Cluster Labels'] == 0, westtoronto_merged.columns[[1] + list(range(5, westtoronto_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>1</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Deli / Bodega</td>\n",
       "      <td>Shopping Mall</td>\n",
       "      <td>Chinese Restaurant</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Supermarket</td>\n",
       "      <td>Fried Chicken Joint</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>Frozen Yogurt Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Borough  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "0  West Toronto               1           Coffee Shop         Deli / Bodega   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue      5th Most Common Venue  \\\n",
       "0         Shopping Mall    Chinese Restaurant  Middle Eastern Restaurant   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0        Sandwich Place           Supermarket   Fried Chicken Joint   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "0      Sushi Restaurant     Frozen Yogurt Shop  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_merged.loc[westtoronto_merged['Cluster Labels'] == 1, westtoronto_merged.columns[[1] + list(range(5, westtoronto_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster 3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>2</td>\n",
       "      <td>Wings Joint</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>Discount Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Flower Shop</td>\n",
       "      <td>Burrito Place</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Tanning Salon</td>\n",
       "      <td>Supplement Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Borough  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "5  West Toronto               2           Wings Joint         Grocery Store   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "5        Discount Store        Sandwich Place  Fast Food Restaurant   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "5           Flower Shop         Burrito Place          Burger Joint   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "5         Tanning Salon        Supplement Shop  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_merged.loc[westtoronto_merged['Cluster Labels'] == 2, westtoronto_merged.columns[[1] + list(range(5, westtoronto_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>3</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Park</td>\n",
       "      <td>Café</td>\n",
       "      <td>Market</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>3</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Café</td>\n",
       "      <td>Middle Eastern Restaurant</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Sporting Goods Shop</td>\n",
       "      <td>Ice Cream Shop</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Borough  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "1  West Toronto               3           Pizza Place            Restaurant   \n",
       "2  West Toronto               3           Coffee Shop        Clothing Store   \n",
       "\n",
       "  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "1           Coffee Shop                Bakery                   Pub   \n",
       "2        Cosmetics Shop    Italian Restaurant                  Café   \n",
       "\n",
       "       6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "1                       Park                  Café                Market   \n",
       "2  Middle Eastern Restaurant  Fast Food Restaurant           Pizza Place   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "1    Italian Restaurant    Japanese Restaurant  \n",
       "2   Sporting Goods Shop         Ice Cream Shop  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_merged.loc[westtoronto_merged['Cluster Labels'] == 3, westtoronto_merged.columns[[1] + list(range(5, westtoronto_merged.shape[1]))]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cluster 5 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Borough</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venue</th>\n",
       "      <th>2nd Most Common Venue</th>\n",
       "      <th>3rd Most Common Venue</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>West Toronto</td>\n",
       "      <td>4</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Performing Arts Venue</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Pet Store</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Furniture / Home Store</td>\n",
       "      <td>Climbing Gym</td>\n",
       "      <td>Stadium</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Borough  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n",
       "4  West Toronto               4                  Café           Coffee Shop   \n",
       "\n",
       "   3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n",
       "4  Performing Arts Venue        Breakfast Spot             Pet Store   \n",
       "\n",
       "  6th Most Common Venue   7th Most Common Venue 8th Most Common Venue  \\\n",
       "4        Sandwich Place  Furniture / Home Store          Climbing Gym   \n",
       "\n",
       "  9th Most Common Venue 10th Most Common Venue  \n",
       "4               Stadium   Caribbean Restaurant  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "westtoronto_merged.loc[westtoronto_merged['Cluster Labels'] == 4, westtoronto_merged.columns[[1] + list(range(5, westtoronto_merged.shape[1]))]]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.6",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
